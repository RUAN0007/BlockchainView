Create a hash-based irrevocable view manager.
===============================================
Create 14 views. 
	Associate view manufacturer1 with txn IDs []
	Generate a random password atjx4j. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view manufacturer2 with txn IDs []
	Generate a random password m4o4qcy. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view warehouse1 with txn IDs []
	Generate a random password kjf6c6n. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view warehouse2 with txn IDs []
	Generate a random password em9yc1. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view warehouse3 with txn IDs []
	Generate a random password uq5yich. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view delivery1 with txn IDs []
	Generate a random password qv55zxv. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view delivery2 with txn IDs []
	Generate a random password b2g6f8m. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view shop1 with txn IDs []
	Generate a random password f54t9a. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view shop2 with txn IDs []
	Generate a random password 8rzd9jh. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view shop3 with txn IDs []
	Generate a random password p7d9vs. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view shop4 with txn IDs []
	Generate a random password 0ak0stm. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view shop5 with txn IDs []
	Generate a random password 00dgc3. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view shop6 with txn IDs []
	Generate a random password uszxzc. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
	Associate view shop7 with txn IDs []
	Generate a random password c2o7u1i. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
===============================================
A view owner prepares Txn 1(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Create a random salt r59so67lk
	Hash the confidential part into 248afbf426767ebfe6e3346ebd2f7f1783aa7297532255de2565c28b9ccc7440 
	Send a txn 227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186 to invoke secretcontract with 248afbf426767ebfe6e3346ebd2f7f1783aa7297532255de2565c28b9ccc7440 as the secret part. 
View manufacturer2 is appended with txns [227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186]. 
	Associate view manufacturer2 with txn IDs [ '227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse1 is appended with txns [227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186]. 
	Associate view warehouse1 with txn IDs [ '227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
===============================================
A view owner prepares Txn 2(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Create a random salt omr0uzbs
	Hash the confidential part into a678fedf0fe2aee59b2a35553ead9d188e21d7911e41713e98a45f3a44d5a41a 
	Send a txn 3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d to invoke secretcontract with a678fedf0fe2aee59b2a35553ead9d188e21d7911e41713e98a45f3a44d5a41a as the secret part. 
View manufacturer2 is appended with txns [3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d]. 
	Associate view manufacturer2 with txn IDs [ '3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse1 is appended with txns [3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d]. 
	Associate view warehouse1 with txn IDs [ '3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View delivery2 is appended with txns [227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186,3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d]. 
	Associate view delivery2 with txn IDs [
  '227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186',
  '3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d'
]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
===============================================
A view owner prepares Txn 3(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Create a random salt tmh8dmrfn
	Hash the confidential part into aa218a79f0854c66b4e6e28c4f9cfd3a1df3756ad16596e6b619571c25214225 
	Send a txn 291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1 to invoke secretcontract with aa218a79f0854c66b4e6e28c4f9cfd3a1df3756ad16596e6b619571c25214225 as the secret part. 
View manufacturer2 is appended with txns [291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1]. 
	Associate view manufacturer2 with txn IDs [ '291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse1 is appended with txns [291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1]. 
	Associate view warehouse1 with txn IDs [ '291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
===============================================
A view owner prepares Txn 4(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Create a random salt t9ruodss3
	Hash the confidential part into 37fff8603c8c398986e55688a0d8ce6699e47568e083d4f8798bf6e95a8f45ca 
	Send a txn 5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0 to invoke secretcontract with 37fff8603c8c398986e55688a0d8ce6699e47568e083d4f8798bf6e95a8f45ca as the secret part. 
View manufacturer2 is appended with txns [5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0]. 
	Associate view manufacturer2 with txn IDs [ '5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse1 is appended with txns [5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0]. 
	Associate view warehouse1 with txn IDs [ '5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View delivery2 is appended with txns [5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0]. 
	Associate view delivery2 with txn IDs [ '5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse3 is appended with txns [227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186,3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d,5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0]. 
	Associate view warehouse3 with txn IDs [
  '227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186',
  '3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d',
  '5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0'
]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
===============================================
A view owner prepares Txn 5(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Create a random salt 0mqqi102m
	Hash the confidential part into b0445e638b3ecbd0df55af36d58ee8c4166ed880d50d2e2f664b92226ca9609d 
	Send a txn 2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7 to invoke secretcontract with b0445e638b3ecbd0df55af36d58ee8c4166ed880d50d2e2f664b92226ca9609d as the secret part. 
View manufacturer2 is appended with txns [2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7]. 
	Associate view manufacturer2 with txn IDs [ '2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse1 is appended with txns [2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7]. 
	Associate view warehouse1 with txn IDs [ '2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View delivery2 is appended with txns [291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1,2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7]. 
	Associate view delivery2 with txn IDs [
  '291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1',
  '2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7'
]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
===============================================
A view owner prepares Txn 6(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Create a random salt 28h3tihkp
	Hash the confidential part into d919f821e21cea0ba5ba87b5c435b1e1a9b86ed614cff6374f179ebebc5d9b4d 
	Send a txn a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414 to invoke secretcontract with d919f821e21cea0ba5ba87b5c435b1e1a9b86ed614cff6374f179ebebc5d9b4d as the secret part. 
View manufacturer2 is appended with txns [a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414]. 
	Associate view manufacturer2 with txn IDs [ 'a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse1 is appended with txns [a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414]. 
	Associate view warehouse1 with txn IDs [ 'a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View delivery2 is appended with txns [a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414]. 
	Associate view delivery2 with txn IDs [ 'a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse3 is appended with txns [a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414]. 
	Associate view warehouse3 with txn IDs [ 'a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View shop5 is appended with txns [227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186,3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d,5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0,a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414]. 
	Associate view shop5 with txn IDs [
  '227222c44033f7dc5344747aab0a4b79e17734f7b93dd22f331ea912ca9ed186',
  '3a735a5a21ce4e04aa27cec18eb6bd855c2eed789cae3731b30998b46e30bf0d',
  '5458e0896bda71d0714c141fdee1ce7dcf9dfb283949e1ac1f452e9f21bd26e0',
  'a3cfbbe803a84a97201332bf87d15fbc89435ed1b43c63bf71c9607f526b1414'
]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
===============================================
A view owner prepares Txn 7(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Create a random salt m73ttjsir
	Hash the confidential part into e63f12cb275104a725320536da03daf49b707c87c0c36593f4bf362ff4f78cbd 
	Send a txn 14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd to invoke secretcontract with e63f12cb275104a725320536da03daf49b707c87c0c36593f4bf362ff4f78cbd as the secret part. 
View manufacturer2 is appended with txns [14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd]. 
	Associate view manufacturer2 with txn IDs [ '14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse1 is appended with txns [14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd]. 
	Associate view warehouse1 with txn IDs [ '14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View delivery2 is appended with txns [14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd]. 
	Associate view delivery2 with txn IDs [ '14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse3 is appended with txns [291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1,2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7,14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd]. 
	Associate view warehouse3 with txn IDs [
  '291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1',
  '2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7',
  '14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd'
]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
===============================================
A view owner prepares Txn 8(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Create a random salt 1t7iprz4j
	Hash the confidential part into 169fe4f5314dd0ef6767e83a9b20b979c910c0136dd8d130f44c245b8f332c2d 
	Send a txn a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a to invoke secretcontract with 169fe4f5314dd0ef6767e83a9b20b979c910c0136dd8d130f44c245b8f332c2d as the secret part. 
View manufacturer2 is appended with txns [a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a]. 
	Associate view manufacturer2 with txn IDs [ 'a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse1 is appended with txns [a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a]. 
	Associate view warehouse1 with txn IDs [ 'a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View delivery2 is appended with txns [a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a]. 
	Associate view delivery2 with txn IDs [ 'a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View warehouse3 is appended with txns [a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a]. 
	Associate view warehouse3 with txn IDs [ 'a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a' ]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
View shop6 is appended with txns [291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1,2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7,14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd,a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a]. 
	Associate view shop6 with txn IDs [
  '291d9fa0f4bdcf214afd729d2b831dcc7014aa60cc6afd3be633532c493cefb1',
  '2ab546332b64e3457dc680eb8c6ce90a7b25b31aee80f2dd42d24575b94c75d7',
  '14117af6122b999f67a59c9bcb208901d5ca995d421f62fa95056ed34329e5cd',
  'a7da113a44b015b46110cad390737cd0d27807c3a588b3b6e31dacb432a2fc0a'
]
	Associate the encrypted txnID with the encrypted confidential part and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in blockchains, with the association to the view name. 
Total Duration (ms): 18405. # of invocations: 48
