Create a encryption-based irrevocable view manager.
===============================================
Create 14 views. 
	Associate view manufacturer1 with txn IDs []
	Generate a random password 034zg5h. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view manufacturer2 with txn IDs []
	Generate a random password teatgh. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view warehouse1 with txn IDs []
	Generate a random password ecvzje. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view warehouse2 with txn IDs []
	Generate a random password yyh9iit. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view warehouse3 with txn IDs []
	Generate a random password fwer3me. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view delivery1 with txn IDs []
	Generate a random password pq7lna. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view delivery2 with txn IDs []
	Generate a random password vfvivpz. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view shop1 with txn IDs []
	Generate a random password lictp1a. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view shop2 with txn IDs []
	Generate a random password nt9rd7c. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view shop3 with txn IDs []
	Generate a random password 2e52qxi. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view shop4 with txn IDs []
	Generate a random password lf4xh08. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view shop5 with txn IDs []
	Generate a random password tijy1z. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view shop6 with txn IDs []
	Generate a random password j150c8r. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
	Associate view shop7 with txn IDs []
	Generate a random password 1sz99g9. Use the password to encode each element of the view message.
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg 
	Upload the encoded to a dedicated view_storage contract in the blockchain, with the association to the view name. 
===============================================
A view owner prepares Txn 1(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Generate a random key gblfihl for this txn
	Use the key to encode the confidential part SECRET_PAYLOAD into 0kNOMEGkmC/sSLaC+nXrRw==
	Send a txn 544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15 to invoke secretcontract with the encoded as the secret part 0kNOMEGkmC/sSLaC+nXrRw==. 
View manufacturer2 is appended with txns [544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15]. 
	Append view manufacturer2 with txn IDs [ '544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key teatgh
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View warehouse1 is appended with txns [544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15]. 
	Append view warehouse1 with txn IDs [ '544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key ecvzje
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
===============================================
A view owner prepares Txn 2(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Generate a random key mfqoa6g for this txn
	Use the key to encode the confidential part SECRET_PAYLOAD into KRsPg7pjr+Sd/9Fqlnwiiw==
	Send a txn b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b to invoke secretcontract with the encoded as the secret part KRsPg7pjr+Sd/9Fqlnwiiw==. 
View manufacturer2 is appended with txns [b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b]. 
	Append view manufacturer2 with txn IDs [ 'b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key teatgh
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View warehouse1 is appended with txns [b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b]. 
	Append view warehouse1 with txn IDs [ 'b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key ecvzje
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View delivery2 is appended with txns [544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15,b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b]. 
	Append view delivery2 with txn IDs [
  '544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15',
  'b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b'
]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key vfvivpz
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
===============================================
A view owner prepares Txn 3(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Generate a random key xc65kd for this txn
	Use the key to encode the confidential part SECRET_PAYLOAD into kO/dQ6lWONtqB0UryAO7sQ==
	Send a txn 564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9 to invoke secretcontract with the encoded as the secret part kO/dQ6lWONtqB0UryAO7sQ==. 
View manufacturer2 is appended with txns [564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9]. 
	Append view manufacturer2 with txn IDs [ '564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key teatgh
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View warehouse1 is appended with txns [564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9]. 
	Append view warehouse1 with txn IDs [ '564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key ecvzje
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View delivery2 is appended with txns [564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9]. 
	Append view delivery2 with txn IDs [ '564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key vfvivpz
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View warehouse3 is appended with txns [544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15,b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b,564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9]. 
	Append view warehouse3 with txn IDs [
  '544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15',
  'b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b',
  '564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9'
]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key fwer3me
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
===============================================
A view owner prepares Txn 4(tid) to invoke Contract secretcontract with confidential part SECRET_PAYLOAD
	Generate a random key c1gudf7 for this txn
	Use the key to encode the confidential part SECRET_PAYLOAD into 4aTaFETFqawYLKgpyDHxvg==
	Send a txn a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0 to invoke secretcontract with the encoded as the secret part 4aTaFETFqawYLKgpyDHxvg==. 
View manufacturer2 is appended with txns [a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0]. 
	Append view manufacturer2 with txn IDs [ 'a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key teatgh
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View warehouse1 is appended with txns [a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0]. 
	Append view warehouse1 with txn IDs [ 'a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key ecvzje
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View delivery2 is appended with txns [a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0]. 
	Append view delivery2 with txn IDs [ 'a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key vfvivpz
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View warehouse3 is appended with txns [a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0]. 
	Append view warehouse3 with txn IDs [ 'a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0' ]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key fwer3me
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
View shop5 is appended with txns [544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15,b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b,564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9,a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0]. 
	Append view shop5 with txn IDs [
  '544029fbe6adb2f5a2bfd38822a6c9087c13ed2d9b00a6d54fb536720927bd15',
  'b4844794d6c95c9a8b6d8519430f21eb18f2a373e73140c82aa11036c449555b',
  '564a4775790870fd4f0c6c44a9957ab4131ce36bcb4f8467371afd3bf34703c9',
  'a02088deadc0076d325f527cd3bba252b52020b222a2b17666218734a7c817e0'
]
	Associate the encrypted txnID with the encrypted txn key and serialize the association into a view msg with the key tijy1z
	Upload the encoded to a dedicated view_storage contract in the blockchain, appending to the view name. 
Total Duration (ms): 9284. # of invocations: 24
